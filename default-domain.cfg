# Version:  /projects/ca/env/orbix_config/default-domain.cfg@@/main/6
#
# Default plugins to load.
#
orb_plugins = ["local_log_stream", "iiop_profile", "giop", "iiop"];


# Set of initial references
#
initial_references:RootPOA:plugin    = "poa";
initial_references:POACurrent:plugin = "poa";
initial_references:DynAnyFactory:plugin = "it_dynany";
initial_references:TransactionCurrent:plugin = "ots_lite";
initial_references:TransactionFactory:plugin = "ots_lite";
initial_references:PortableInterceptorManager:plugin="portable_interceptor";
initial_references:PortableInterceptorCurrent:plugin="portable_interceptor";
initial_references:IT_TCPTransport:plugin = "atli_tcp_ss";
initial_references:PSS:plugin = "pss_db";
initial_references:IT_PlainTextKeyForwarder:plugin = "plain_text_key";



#
# URL resolvers
#
url_resolvers:corbaname:plugin = "naming_resolver";
url_resolvers:iioploc:plugin = "iiop_profile";
url_protocols:iiop:plugin = "iiop_profile";

# java
initial_references:IT_ATLI_TCPTransport:plugin = "atli_tcp";
plugins:atli_tcp:ClassName = "com.iona.corba.atli.tcp.TCPPlugIn";
plugins:iiop_profile:ClassName = "com.iona.corba.iiopprofile.IIOPProfilePlugIn";
plugins:portable_interceptor:ClassName = "com.iona.corba.portable_interceptor.PIORBPlugInImpl";
plugins:poa:ClassName = "com.iona.corba.poa.POAPlugIn";
plugins:iiop:ClassName = "com.iona.corba.iiop.IIOPPlugIn";
plugins:giop:ClassName = "com.iona.corba.giop.GIOPPlugIn";
plugins:local_log_stream:ClassName = "com.iona.corba.art.eventlog.LocalStreamPlugIn";
plugins:itconfig:ClassName = "com.iona.corba.config_repository.domain_handler.ArtConfigCFRPlugInImpl";
plugins:giop_snoop:ClassName = "com.iona.corba.giop_snoop.GIOPSnoopPlugIn";


#
# CFR Domain Handler
#
domain_plugins:itconfig = "cfr_handler";
plugins:cfr_handler:shlib_name = "it_cfr_handler";


#
# Binding information.
#
binding:client_binding_list = ["OTS+POA", "POA", "OTS+GIOP+SIOP", "GIOP+SIOP", "OTS+GIOP+IIOP", "GIOP+IIOP"];
binding:server_binding_list = ["OTS", ""];

#
# Plugin information.
#

#
# GIOP
#
plugins:giop:shlib_name = "it_giop";

#
# IIOP
#
plugins:iiop:shlib_name = "it_iiop";
plugins:iiop_profile:shlib_name = "it_iiop_profile";

#
plugins:system_log_stream:shlib_name = "it_system_log_stream";
# ATLI
#
plugins:atli_tcp_ss:shlib_name = "it_atli_tcp_ss";
plugins:atli_tcp_ws:shlib_name = "it_atli_tcp_ws";

#
# SIOP
#
plugins:siop:shlib_name = "it_siop";
plugins:siop_component:shlib_name = "it_siop_component";

#
# Naming URL Resolver
#
plugins:naming_resolver:shlib_name = "it_naming";

#
# Plain Text Key
#
plugins:plain_text_key:shlib_name = "it_plain_text_key";

#
# System Log Stream
#
plugins:system_log_stream:shlib_name = "it_system_log_stream";

#
# Object Transaction Service
#

plugins:ots_lite:shlib_name = "it_ots_lite";
plugins:ots_lite:transaction_factory_name = "TransactionFactory";
plugins:ots_lite:resource_retry_timeout = "5";
plugins:ots_lite:resource_retry_limit = "-1";
plugins:ots_lite:default_transaction_timeout = "300";
plugins:ots_lite:transaction_timeout_period = "1000";


#
# PSS
#

plugins:pss_db:shlib_name = "it_pss_db";


#
# Admin
#
# admin parser
admin_parser_name = "admin_parser.tcl";

# Plugins for itadmin
#
admin_plugins = ["locator_adm", "named_key_adm", "poa_adm", "config_adm", "ifr_adm", "ns_adm", "nsog_adm", "pssdb_adm"];

# Plug-ins' library, grammar and help file names 
#

plugins:locator_adm:shlib_name   = "it_locator_adm";
plugins:locator_adm:grammar_db   = "locator_adm_grammar.txt";
plugins:locator_adm:help_db      = "locator_adm_help.txt";

plugins:named_key_adm:shlib_name = "it_named_key_adm";
plugins:named_key_adm:grammar_db = "named_key_adm_grammar.txt";
plugins:named_key_adm:help_db    = "named_key_adm_help.txt";

plugins:poa_adm:shlib_name       = "it_poa_adm";
plugins:poa_adm:grammar_db       = "poa_adm_grammar.txt";
plugins:poa_adm:help_db          = "poa_adm_help.txt";

plugins:config_adm:shlib_name    = "it_config_adm";
plugins:config_adm:grammar_db    = "config_adm_grammar.txt";
plugins:config_adm:help_db       = "config_adm_help.txt";

plugins:ifr_adm:shlib_name       = "it_ifr_adm";
plugins:ifr_adm:grammar_db       = "ifr_adm_grammar.txt";
plugins:ifr_adm:help_db          = "ifr_adm_help.txt";

plugins:ns_adm:shlib_name        = "it_ns_adm";
plugins:ns_adm:grammar_db        = "ns_adm_grammar.txt";
plugins:ns_adm:help_db           = "ns_adm_help.txt";

plugins:nsog_adm:shlib_name      = "it_nsog_adm";
plugins:nsog_adm:grammar_db      = "nsog_adm_grammar.txt";
plugins:nsog_adm:help_db         = "nsog_adm_help.txt";

plugins:pssdb_adm:shlib_name     = "it_pssdb_adm";
plugins:pssdb_adm:grammar_db     = "pssdb_adm_grammar.txt";
plugins:pssdb_adm:help_db        = "pssdb_adm_help.txt";


#
# Config scopes to override the defaults.
#

# Activation config scope
#
activator
{
    orb_plugins = ["local_log_stream", "iiop_profile", "giop", "iiop"];
 
    # Activator's plug-in
    #
    plugins:activator:shlib_name = "it_activator_svr";
    
    # NT service support dependencies
    #             
    plugins:activator:nt_service_dependencies = ["ITlocator"];   

    # Activation logging support.
    #
    event_log:filters="{IT_ACTIVATOR=INFO_ALL,WARN,ERROR,FATAL}";
    plugins:local_log_stream:filename = "%{LOCAL_ACTIVATOR_LOGFILE}";

    # The Activator name is prefixed with the Activator's host name:
    # <host name>/<plugins:activator:name value>
    # With a host prefix, the activator name is unique if there is 
    # a single Activator running on a single host.
    #
    plugins:activator:name = "it_activator";

    # The Activator name must be unique across a location domain.
    # Use another configuration scope if more than one Activator is 
    # required on a single host.
    #
    activator2
    {
	plugins:activator:name = "it_activator2";
    };
    activator3
    {
	plugins:activator:name = "it_activator3";
    };	

};


#
# OTS lite  orb, internal to ots lite plugin
#
ots_lite_orb
{
    orb_plugins = ["iiop_profile", "giop", "iiop"];
	
    binding:client_binding_list = ["POA_Coloc", "GIOP+SIOP", "GIOP+IIOP"];
    binding:server_binding_list = [""];	
};


# Location config scope
#
locator
{
    orb_plugins = ["local_log_stream", "iiop_profile", "giop", "iiop", "ots_lite"];

    pss_plugins = ["locator_store", "poa_locator_store", "named_key_store"];

    # bindings need OTS
    #
    binding:client_binding_list = ["OTS+POA_Coloc", "OTS+GIOP+IIOP"];
    binding:server_binding_list = ["OTS", ""];

    # Location direct persistent transport information for IIOP to use. 
    #
    policies:iiop:server_address_mode_policy:publish_hostname = "true";

    # Locator's main plug-in
    #
    plugins:locator:shlib_name = "it_locator_svr";
    plugins:locator:location_domain_name = "Default Location Domain";

    # Location logging support.
    #
    event_log:filters="{IT_LOCATOR=INFO_ALL,WARN,ERROR,FATAL},{IT_POA_LOCATOR=INFO_ALL,WARN,ERROR,FATAL}";

    # Location plug-in dependencies
    #
    plugins:locator:oa_plugins = ["poa_locator", "named_key"];
    plugins:poa_locator:shlib_name = "it_poa_location_loc";
    plugins:named_key:shlib_name = "it_named_key_loc";

    # PSS implementation plugins
    # 
    plugins:named_key_store:shlib_name = "it_named_key_loc_store_pss_r";
    plugins:locator_store:shlib_name = "it_locator_svr_store_pss_r";
    plugins:poa_locator_store:shlib_name = "it_poa_location_loc_store_pss_r";

    #
    # Database configuration
    #   
    plugins:locator:db_env_name = "it_locator";
    plugins:locator:named_key_home_type_id = "PSDL:IT_NamedKeyImpl/NamedKeyHomeImpl:1.0";
    plugins:locator:process_home_type_id   = "PSDL:IT_ImrStoreImpl/ProcessDataHomeImpl:1.0";
    plugins:locator:orb_home_type_id       = "PSDL:IT_ImrStoreImpl/OrbDataHomeImpl:1.0";
    plugins:locator:namespace_home_type_id = "PSDL:IT_PoaImrStoreImpl/NamespaceHomeImpl:1.0";

    plugins:pss_db:envs:it_locator:create_dirs = "true";
    plugins:pss_db:envs:it_locator:verbose = "true";
    plugins:pss_db:envs:it_locator:verb_all = "true";
    plugins:pss_db:envs:it_locator:init_txn = "true";
plugins:locator:iiop:port = "3075";
plugins:local_log_stream:filename = "/var/tmp/iona/orbix2000/logs/locator.log";
plugins:pss_db:envs:it_locator:db_home = "/var/tmp/iona/orbix2000/dbs/locator";
};

naming
{
    orb_plugins = ["local_log_stream", "iiop_profile", "giop", "iiop"];

    # Naming plug-ins.
    #
    plugins:naming:shlib_name = "it_naming_svr";
   
    # PSS
    #
    plugins:it_naming_store_pss_r:shlib_name = "it_naming_svr_store_pss_r";
    pss_plugins = ["it_naming_store_pss_r"];
  
    # Other config attributes for the NameService:
    #
    plugins:naming:allow_nil =          "True" ;
    # Should not need to change these:
    plugins:naming:it_naming_context_ext_poa_name = "_default_it_nc_ext_poa_";
    plugins:naming:binding_iterator_poa_name = "_default_it_bi_poa_";
    plugins:naming:object_group_poa_name = "_default_og_poa_";
    plugins:naming:object_group_factory_poa_name = "_default_ogf_poa_";
    plugins:naming:ogf_oid = "_IT_OGF_OID_";

    # PSS config attributes:
    plugins:naming:connect_to = "it_naming_store";
    plugins:pss_db:envs:it_naming_store:create_dirs =         "true";
    plugins:pss_db:envs:it_naming_store:verb_all =            "true";
    plugins:pss_db:envs:it_naming_store:init_txn =            "true";
   
    # NT service support dependencies
    #             
    plugins:naming:nt_service_dependencies = ["ITlocator"];
plugins:local_log_stream:filename = "/var/tmp/iona/orbix2000/logs/naming.log";
plugins:pss_db:envs:it_naming_store:db_home = "/var/tmp/iona/orbix2000/dbs/naming";   

};


ifr
{
    orb_plugins = ["local_log_stream", "iiop_profile", "giop", "iiop"];

    plugins:ifr:shlib_name = "it_ifr_svr";

    # NT service support dependencies
    #             
    plugins:ifr:nt_service_dependencies = ["ITlocator"];   

    plugins:ots_lite:default_transaction_timeout = "300";
    plugins:pss_db:envs:ifr_store:create_dirs = "true";
    plugins:pss_db:envs:ifr_store:verb_all = "true";
    plugins:pss_db:envs:ifr_store:init_txn = "true";
plugins:local_log_stream:filename = "/var/tmp/iona/orbix2000/logs/ifr.log";
plugins:pss_db:envs:ifr_store:db_home = "/var/tmp/iona/orbix2000/dbs/ifr";
   
};

config_rep
{
    orb_plugins = ["local_log_stream", "iiop_profile", "giop", "iiop"];

    pss_plugins = ["cfr_store"];

    plugins:cfr_store:shlib_name = "it_cfr_svr_store_pss_r";

    plugins:config_rep:configscope_home_type_id	= "PSDL:IT_CFRStoreImpl/ConfigScopeHomeImpl:1.0";
    plugins:config_rep:binding_home_type_id = "PSDL:IT_CFRStoreImpl/BindingHomeImpl:1.0";
    plugins:config_rep:connect_to = "cfr_store";
    plugins:config_rep:shlib_name = "it_cfr_svr";


    plugins:pss_db:envs:cfr_store:create_dirs = "true";
    plugins:pss_db:envs:cfr_store:verb_all = "true";
    plugins:pss_db:envs:cfr_store:init_txn = "true";
   
};


demos 
{
  pss
  {
      orb_plugins = ["local_log_stream", "iiop_profile", "giop", "iiop"];
        
      plugins:pss_db:envs:bank:db_home        = ".";
      plugins:pss_db:envs:bank:create_dirs    = "true"; # default is false
      plugins:pss_db:envs:bank:verbose        = "true"; # default is false
      plugins:pss_db:envs:bank:init_txn       = "true"; # default is false
  };
};
LOCAL_ACTIVATOR_LOGFILE = "/var/tmp/iona/orbix2000/logs/activator.log";


policies:iiop:buffer_sizes_policy:default_buffer_size = "131072";

################################################################################
#OSI CA server configuration
################################################################################

#If you use name service uncomment out following line and put the IOR string
#in double quoate into the right side of the '='. Terminate the line with ';'.

#initial_references:NameService:reference = 

#If you are using HA, run both primary and secondary CA server. Once you see
#the IOR files for CA server HA objects are created (...PrimaryCAServer.ior or
#SecondaryCAServer.ior). Get the IOR string and put them to following lines with
#double quoate and teminating ';'.

#initial_references:PrimaryCAServer:reference = 
#initial_references:SecondaryCAServer:reference = 

#If your host is multi-homed, you can specify which host name to be used in the
#IOR string by putting th host name to following host line. If you are not
#using HA, put the host name to the PrimaryConfigScope line. If you wish to
#change the port in the IOR string, you can do so by change the value 1570.

#PrimaryConfigScope:iiop:host = 
PrimaryConfigScope:iiop:port = "1600";
#SecondaryConfigScope:iiop:host = 
SecondaryConfigScope:iiop:port = "1600";
